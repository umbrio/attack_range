- name: copy the timestamp_app to the splunk server
  copy:
    src: timestamp_app
    dest: /opt/splunk/etc/apps/
    owner: splunk
    group: splunk
    mode: 0750
  register: app_copy
 
- name: copy system_limits.conf to splunk server
  copy:
    src: system_limits.conf
    dest: /opt/splunk/etc/system/local/limits.conf
    owner: splunk
    group: splunk
  notify: restart splunk

- name: restart splunk
  service: name=splunk state=restarted
  when: app_copy.changed
  become: yes

# Deze task is voor nu niet meer nodig, dataset wordt opgehaald vanuit de S3 bucket. 
#- name: Run Collect search
#  uri:
#    url: "https://127.0.0.1:8089/servicesNS/admin/search/search/jobs"
#    method: POST
#    body_format: form-urlencoded
#    user: "admin"
#    password: "{{ splunk_admin_password }}"
#    validate_certs: false
#    body:
#      output_mode: "json"
#      search: |
#        savedsearch bots_collect_to_hec_file time="{{ ansible_date_time.date }} 09:00"
#    timeout: 90
#    return_content: yes
#    status_code: 201
#  register: job

#- name: Wait for the search to be done
#  uri:
#    url: "https://127.0.0.1:8089/services/search/jobs/{{ job.json.sid }}"
#    validate_certs: no
#    method: GET
#    body_format: form-urlencoded
#    user: "admin"
#    password: "{{ splunk_admin_password }}"
#    body:
#      output_mode: "json"
#    timeout: 30
#    return_content: yes
#    status_code: 200
#  register: status
#  until: status.json.entry[0].content.isDone | bool
#  retries: 7000

- name: download Umbrio BOTSv3 dataset
  unarchive:
    src: 'https://umb-bots-data.s3.eu-central-1.amazonaws.com/umb_bots.tgz'
    dest: /tmp
    owner: splunk
    group: splunk
    remote_src: yes
    
- name: Run HEC push
  command: /opt/splunk/etc/apps/timestamp_app/bin/hec_push.py
  register: hec_push
  become: yes

- debug: var=hec_push.stdout
